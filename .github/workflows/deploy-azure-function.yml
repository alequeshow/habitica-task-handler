name: Deploy Azure Function

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal

  deploy:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install Azure CLI
      uses: azure/CLI@v2
      with:
        azcliversion: latest
        inlineScript: |
          echo "Azure CLI Version:"
          az --version
          echo "Environment Variables:"
          env | grep -E "(AZURE|GITHUB)" | sort

    - name: Install Azure Functions Core Tools
      run: npm install -g azure-functions-core-tools@4 --unsafe-perm true

    - name: Debug OIDC Token
      run: |
        echo "GitHub Token Endpoint: $ACTIONS_ID_TOKEN_REQUEST_URL"
        echo "GitHub Token Available: $ACTIONS_ID_TOKEN_REQUEST_TOKEN"
        echo "Repository: $GITHUB_REPOSITORY"
        echo "Ref: $GITHUB_REF"
        echo "=== Fetching and Inspecting JWT Token ==="
        TOKEN=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq -r .value)
        echo "Token acquired successfully"
        echo "=== JWT Header ==="
        echo $TOKEN | cut -d. -f1 | base64 -d 2>/dev/null | jq . || echo "Could not decode header"
        echo "=== JWT Payload ==="
        echo $TOKEN | cut -d. -f2 | base64 -d 2>/dev/null | jq . || echo "Could not decode payload"

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      env:
        AZURE_CLI_DEBUG: true

    - name: Test Azure Login Success
      if: success()
      run: |
        echo "=== Azure Login Successful ==="
        az account show --output table
        az account list --output table

    - name: Debug Azure Login Failure
      if: failure()
      run: |
        echo "=== Azure Login Failed - Debug Information ==="
        echo "Manual login attempt with verbose output:"
        az login --service-principal \
          --username "${{ secrets.AZURE_CLIENT_ID }}" \
          --federated-token "$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq -r .value)" \
          --tenant "${{ secrets.AZURE_TENANT_ID }}" \
          --debug

    - name: Build solution for deployment
      run: dotnet build --configuration Release

    - name: Deploy Azure Function
      run: |
        cd src/Alequeshow.Habitica.Webhooks
        func azure functionapp publish ${{ secrets.AZURE_FUNCTION_APP_NAME }}